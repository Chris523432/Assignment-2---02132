import chisel3._
import chisel3.util._
import chisel3.iotesters
import chisel3.iotesters.PeekPokeTester
import java.util

object Programs{
  val program1 = Array(
    "b00001100001000000000000000000000".U(32.W), // J 0x10000
    "b00001100010000000000000000000000".U(32.W), // J 0x20000
    "b00001100100000000000000000010011".U(32.W), // J 0x40023
    "b00001100110000000000000000010100".U(32.W), // J 0x50024
    "b00001100111000000000000011001000".U(32.W), // J 0x70060
    "b00100000010001000000000000101001".U(32.W), // ADDI $4, $2, 0x29
    "b00001100011000000000000000000000".U(32.W), // J 0x30000
    "b00100000011001000000000000100111".U(32.W), // ADDI $4, $3, 0x37
    "b00000000110000110010100000000010".U(32.W), // ADD $5, $6, $3
    "b00000000110001100010000000000001".U(32.W), // ADD $2, $6, $6
    "b00000000111001110011000000000001".U(32.W), // ADD $6, $7, $7
    "b00100000010001010000000001001010".U(32.W), // ADDI $5, $2, 0x2A
    "b00010100111000010000000000000000".U(32.W), // BEQ $7, $1, 0x0
    "b00100100000000000000000000100101".U(32.W), // ADDI $1, $0, 0x25
    "b00100000011000101000000001001010".U(32.W), // ADDI $5, $3, 0x2A
    "b00010100111000010000000000000000".U(32.W), // BEQ $7, $1, 0x0
    "b00100100000000000000000000100101".U(32.W), // ADDI $1, $0, 0x25
    "b00011100010001000000000001001010".U(32.W), // BEQ $1, $2, 0x2A
    "b00010100111000010000000000000000".U(32.W), // BEQ $7, $1, 0x0
    "b00100100000000000000000000100101".U(32.W)  // ADDI $1, $0, 0x25
  )

  val program2 = Array(
    "b00001100001000000000000000000000".U(32.W), // J 0x10000
    "b00001100010000000000000000000000".U(32.W), // J 0x20000
    "b00001100100000000000000000010011".U(32.W), // J 0x40023
    "b00001100110000000000000000010100".U(32.W), // J 0x50024
    "b00001100111000000000000011001000".U(32.W), // J 0x70060
    "b00100000010001000000000000101001".U(32.W), // ADDI $4, $2, 0x29
    "b00001100011000000000000000000000".U(32.W), // J 0x30000
    "b00100000011001000000000000100111".U(32.W), // ADDI $4, $3, 0x37
    "b00000000110000110010100000000010".U(32.W), // ADD $5, $6, $3
    "b00000000110001100010000000000001".U(32.W), // ADD $2, $6, $6
    "b00000000111001110011000000000001".U(32.W), // ADD $6, $7, $7
    "b00100000010001010000000001001010".U(32.W), // ADDI $5, $2, 0x2A
    "b00010100111000010000000000000000".U(32.W), // BEQ $7, $1, 0x0
    "b00100100000000000000000000100101".U(32.W), // ADDI $1, $0, 0x25
    "b00100000011000101000000001001010".U(32.W), // ADDI $5, $3, 0x2A
    "b00010100111000010000000000000000".U(32.W), // BEQ $7, $1, 0x0
    "b00100100000000000000000000100101".U(32.W), // ADDI $1, $0, 0x25
    "b00011100010001000000000001001010".U(32.W), // BEQ $1, $2, 0x2A
    "b00010100111000010000000000000000".U(32.W), // BEQ $7, $1, 0x0
    "b00100100000000000000000000100101".U(32.W)  // ADDI $1, $0, 0x25
  )


}